#! /usr/bin/env python

import rospy
from ecn_common.srv import Token, TokenResponse

class TokenManager:
    def __init__(self):        
        self.pub = rospy.Service('/token_manager/manager', Token, self.tokenCB)
        self.res = TokenResponse()
        self.t0 = 0
        self.in_cb = False   
    def update(self):
        self.pub.publish(self.current)
        
    def tokenCB(self, req):
        if self.in_cb:
            return self.res
        self.in_cb = True
                
        t = rospy.Time.now().to_sec()
        
        if req.init:    # first-time request
            self.res.available = (t - self.t0 > 1)
            if self.res.available:
                self.res.current = req.id
                print(self.res.current + ' just got the token')
            else:
                print(req.id + ' asking for token')
        else:
            # called from update()
            if self.res.current == req.id:
                self.t0 = t
                self.res.available = False
                print(self.res.current + ' still on Baxter')
            else:
                print(req.id + ' called update before wait')
        self.in_cb = False
        return self.res
            
if __name__ == '__main__':
    '''
    Begin of main code
    '''                    
    rospy.init_node('token_manager')
    
    tm = TokenManager()
        
    rospy.spin()
    
